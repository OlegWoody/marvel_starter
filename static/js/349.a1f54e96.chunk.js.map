{"version":3,"file":"static/js/349.a1f54e96.chunk.js","mappings":"sLAEA,MAOA,EAPqBA,KAEbC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACC,QAAQ,QAASC,MAAO,QAASC,OAAQ,QAASC,UAAW,UAAWC,OAAO,UAC5FC,IAAKC,EAAKC,IAAI,a,sGCGtB,MAuEA,EAvEmBC,KAEf,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,KACtCC,EAAgBC,IAAqBF,EAAAA,EAAAA,WAAS,IAC9CG,EAAQC,IAAaJ,EAAAA,EAAAA,UAAS,IAC9BK,EAAaC,IAAkBN,EAAAA,EAAAA,WAAS,IAEzC,QAACO,EAAO,MAAEC,EAAK,aAAEC,IAAgBC,EAAAA,EAAAA,MAEvCC,EAAAA,EAAAA,YAAU,KACNC,EAAUT,GAAQ,EAAK,GACxB,IAEH,MAAMS,EAAYA,CAACT,EAAQU,KACbX,GAAVW,GACAJ,EAAaN,GACRW,KAAKC,EAAmB,EAG3BA,EAAsBC,IACxB,IAAIC,GAAQ,EACRD,EAAcE,OAAS,IACvBD,GAAQ,GAEZlB,EAAc,IAAID,KAAekB,IACjCd,GAAkB,GAClBE,EAAUD,EAAS,GACnBG,EAAeW,EAAM,EAuBzB,MAAME,EApBN,SAAsBC,GAClB,MAAMD,EAAQC,EAAIC,KAAI,CAACC,EAAMC,KAErBpC,EAAAA,EAAAA,KAAA,MAAIqC,UAAU,eAAcC,UACxBC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,GAAE,GAAAC,OAAKP,EAAKQ,IAAKL,SAAA,EACnBtC,EAAAA,EAAAA,KAAA,OAAKO,IAAK4B,EAAKS,UAAWnC,IAAK0B,EAAKU,KAAMR,UAAU,sBACpDrC,EAAAA,EAAAA,KAAA,OAAKqC,UAAU,oBAAmBC,SAAEH,EAAKU,QACzCN,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qBAAoBC,SAAA,CAAEH,EAAKW,MAAM,YAJtBV,KAU1C,OACIpC,EAAAA,EAAAA,KAAA,MAAIqC,UAAU,eAAcC,SACvBN,GAGb,CAEce,CAAYpC,GAEpBqC,EAAe3B,GAAQrB,EAAAA,EAAAA,KAACD,EAAAA,EAAY,IAAK,KACzCkD,EAAU7B,IAAYN,GAAiBd,EAAAA,EAAAA,KAACkD,EAAAA,EAAO,IAAK,KAE1D,OACIX,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,CACxBU,EACAC,EACAjB,GACDhC,EAAAA,EAAAA,KAAA,UACImD,SAAUrC,EACVb,MAAO,CAAC,QAAYiB,EAAc,OAAS,SAC3CmB,UAAU,mCACVe,QAASA,IAAM3B,EAAUT,GAAQsB,UACjCtC,EAAAA,EAAAA,KAAA,OAAKqC,UAAU,QAAOC,SAAC,kBAEzB,E,mHC1Dd,EAbkBe,KAEVd,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EACxBtC,EAAAA,EAAAA,KAAA,OAAKO,IAAK+C,EAAU7C,IAAI,cACxB8B,EAAAA,EAAAA,MAAA,OAAKF,UAAU,mBAAkBC,SAAA,CAAC,0BACRtC,EAAAA,EAAAA,KAAA,SAAK,kBAG/BA,EAAAA,EAAAA,KAAA,OAAKO,IAAKgD,EAAc9C,IAAI,qB,aCTxC,MAgBA,EAhBkB+C,KAEVjB,EAAAA,EAAAA,MAAAkB,EAAAA,SAAA,CAAAnB,SAAA,EACAC,EAAAA,EAAAA,MAACmB,EAAAA,EAAM,CAAApB,SAAA,EACCtC,EAAAA,EAAAA,KAAA,QACI6C,KAAK,cACLc,QAAQ,kCAEZ3D,EAAAA,EAAAA,KAAA,SAAAsC,SAAO,oBAEXtC,EAAAA,EAAAA,KAACqD,EAAS,KACVrD,EAAAA,EAAAA,KAACU,EAAU,M,6CCZhB,MC+EP,EA/EuBa,KACnB,MAAM,QAACH,EAAO,QAAEwC,EAAO,MAAEvC,EAAK,WAAEwC,EAAU,OAAEC,EAAM,UAAEC,GDDjCC,MACnB,MAAO5C,EAAS6C,IAAcpD,EAAAA,EAAAA,WAAS,IAChCQ,EAAO6C,IAAYrD,EAAAA,EAAAA,WAAS,IAC5BiD,EAAQC,IAAalD,EAAAA,EAAAA,UAAS,WAE/B+C,GAAUO,EAAAA,EAAAA,cAAYC,eAAOC,GAAsF,IAAjFC,EAAMC,UAAAxC,OAAA,QAAAyC,IAAAD,UAAA,GAAAA,UAAA,GAAG,MAAOE,EAAIF,UAAAxC,OAAA,QAAAyC,IAAAD,UAAA,GAAAA,UAAA,GAAG,KAAMG,EAAOH,UAAAxC,OAAA,QAAAyC,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,eAAgB,oBAE5FN,GAAW,GACXF,EAAU,WACV,IACI,MAAMY,QAAiBC,MAAMP,EAAK,CAACC,SAAQG,OAAMC,YAEjD,IAAKC,EAASE,GACV,MAAM,IAAIC,MAAM,mBAADpC,OAAoB2B,EAAG,cAAA3B,OAAaiC,EAASb,SAGhE,MAAMiB,QAAaJ,EAASK,OAE5B,OADAf,GAAW,GACJc,CACX,CAAE,MAAME,GAGJ,MAFAhB,GAAW,GACXC,EAASe,EAAEC,SACLD,CACV,CACJ,GAAG,IAMC,MAAO,CAAC7D,UAASC,QAAOwC,YALLM,EAAAA,EAAAA,cAAY,KAC3BD,EAAS,MACTH,EAAU,UAAU,GACrB,IAEiCH,UAASE,SAAQC,YAAU,EC7BFC,GAE3DmB,EAAS,4CAETC,EAAQ,0CA4BRC,EAAoBC,IAAW,IAADC,EAChC,MAAO,CACH5C,GAAI2C,EAAM3C,GACV6C,SAAUF,EAAMG,KAAK,GAAGpB,IACxBxB,KAAMyC,EAAMI,MACrB5C,MAAOwC,EAAMK,OAAO,GAAG7C,MAAK,GAAAJ,OACtB4C,EAAMK,OAAO,GAAG7C,MAAK,KACxB,gBACMF,UAAW0C,EAAM1C,UAAUgD,KAAI,IAASN,EAAM1C,UAAUiD,UACxDC,YAAaR,EAAMQ,aAAe,0BAClCC,UAAWT,EAAMS,UAAS,GAAArD,OACrB4C,EAAMS,UAAS,OAClB,2CACFC,UAA8B,QAApBT,EAAAD,EAAMW,YAAY,UAAE,IAAAV,OAAA,EAApBA,EAAsBS,WAAY,QAE/C,EAGCE,EAAuBC,GACrBA,EAGG,CACHxD,GAAIwD,EAAKxD,GACTE,KAAMsD,EAAKtD,KACXiD,YAAaK,EAAKL,YAAW,GAAApD,OAAMyD,EAAKL,YAAYM,MAAM,EAAG,KAAI,OAAQ,6CACzExD,UAAWuD,EAAKvD,UAAUgD,KAAO,IAAMO,EAAKvD,UAAUiD,UACtDL,SAAUW,EAAKV,KAAK,GAAGpB,IACvBgC,KAAMF,EAAKV,KAAK,GAAGpB,IACnBiC,OAAQH,EAAKG,OAAOtE,OATb,CAACX,OAAO,GAavB,MAAO,CAACyC,SACJC,YACA3C,UACAC,QACAwC,aACA0C,iBA1DqBnC,iBAAiC,IAA1BpD,EAAMuD,UAAAxC,OAAA,QAAAyC,IAAAD,UAAA,GAAAA,UAAA,GAPlB,IAShB,aADkBX,EAAQ,GAADlB,OAAIyC,EAAQ,8BAAAzC,OAA6B1B,EAAM,KAAA0B,OAAI0C,KACjEL,KAAKyB,QAAQtE,IAAIgE,EAChC,EAwDIO,aAjDiBrC,UACjB,MAAMsC,QAAY9C,EAAQ,GAADlB,OAAIyC,EAAQ,eAAAzC,OAAcC,EAAE,KAAAD,OAAI0C,IACzD,OAAOc,EAAoBQ,EAAI3B,KAAKyB,QAAQ,GAAG,EAgD/ClF,aAvDiB8C,iBAAiC,IAA1BpD,EAAMuD,UAAAxC,OAAA,QAAAyC,IAAAD,UAAA,GAAAA,UAAA,GAZd,IAchB,aADkBX,EAAQ,GAADlB,OAAIyC,EAAQ,0BAAAzC,OAAyB1B,EAAM,KAAA0B,OAAI0C,KAC7DL,KAAKyB,QAAQtE,IAAImD,EAChC,EAqDIsB,UA9CcvC,UACpB,MAAMsC,QAAY9C,EAAQ,GAADlB,OAAIyC,EAAQ,WAAAzC,OAAUC,EAAE,KAAAD,OAAI0C,IACrD,OAAOC,EAAiBqB,EAAI3B,KAAKyB,QAAQ,GAAG,EA6CtCI,mBAnEuBxC,gBACLR,EAAQ,GAADlB,OAAIyC,EAAQ,oBAAAzC,OAAmBG,EAAI,KAAAH,OAAI0C,KACrDL,KAAKyB,QAkEnB,C","sources":["components/errorMessage/ErrorMessage.js","components/comicsList/ComicsList.js","components/appBanner/AppBanner.js","components/pages/ComicsPage.js","hooks/http.hook.js","services/MarvelService.js"],"sourcesContent":["import img from './error.gif'\r\n\r\nconst ErrorMessage = () =>{\r\n    return (\r\n        <img style={{display:'block', width: '250px', height: '250px', objectFit: 'contain', margin:'0 auto'}}\r\n        src={img} alt='error img'/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import {useState, useEffect} from 'react';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport { Link } from 'react-router-dom';\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setnewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {loading, error, getAllComics} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setnewItemLoading(false) : setnewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n    }\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n        setComicsList([...comicsList, ...newComicsList]);\n        setnewItemLoading(false);\n        setOffset(offset + 8);\n        setComicsEnded(ended);\n    }\n\n    function renderItems (arr) {\n        const items = arr.map((item, i) => {\n            return (\n                <li className=\"comics__item\" key={i}>\n                    <Link to={`${item.id}`}>\n                        <img src={item.thumbnail} alt={item.name} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.name}</div>\n                        <div className=\"comics__item-price\">{item.price} $</div>\n                    </Link>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderItems(comicsList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                disabled={newItemLoading} \n                style={{'display' : comicsEnded ? 'none' : 'block'}}\n                className=\"button button__main button__long\"\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\"\r\nimport { Helmet } from \"react-helmet\";\r\nconst ComicsPage =()=>{\r\n    return(\r\n        <>\r\n        <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Page with list of our comics\"\r\n                />\r\n                <title>Comics page</title>\r\n            </Helmet>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;","import {useCallback, useState} from 'react';\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(false);\r\n    const [status, setStatus] = useState(\"waiting\")\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\r\n        setLoading(true)\r\n        setStatus(\"loading\")\r\n        try{\r\n            const response = await fetch(url, {method, body, headers})\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n            setLoading(false);\r\n            return data\r\n        } catch(e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n    }, []);\r\n        const clearError = useCallback(()=>{\r\n            setError(null)\r\n            setStatus(\"waiting\")\r\n        }, [])\r\n\r\n        return {loading, error, clearError, request, status, setStatus}\r\n}","import {useHttp} from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService=()=>{\r\n    const {loading, request, error, clearError, status, setStatus} = useHttp()\r\n    // _apiBase='https://gateway.marvel.com:443/v1/public/characters';\r\n    const _apiBase='https://gateway.marvel.com:443/v1/public/';\r\n    // _apiKey='apikey=4a1cee68a845fc20042b5dc8b9523728';\r\n    const _apiKey='apikey=729b5cdb5d9dcfb32ca407c6c566b080';\r\n    const _baseOffset = 210;\r\n\r\n    const getCharacterByName = async(name) =>{\r\n        const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`)\r\n        return res.data.results\r\n    }\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getAllComics = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformComics)\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getComics = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\t\treturn _transformComics(res.data.results[0]);\r\n    }\r\n\r\n    const _transformComics = (comic) => {\r\n        return {\r\n            id: comic.id,\r\n            homepage: comic.urls[0].url,\r\n            name: comic.title,\r\n\t\t\tprice: comic.prices[0].price\r\n\t\t\t\t? `${comic.prices[0].price}$`\r\n\t\t\t\t: \"not available\",\r\n            thumbnail: comic.thumbnail.path + `.` + comic.thumbnail.extension,\r\n            description: comic.description || \"There is no description\",\r\n            pageCount: comic.pageCount\r\n            ? `${comic.pageCount} p.`\r\n            : \"No information about the number of pages\",\r\n            language: comic.textObjects[0]?.language || \"en-us\",\r\n\r\n        }\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        if(!char){\r\n            return {error: true}\r\n        }\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    return {status, \r\n        setStatus,\r\n        loading,\r\n        error, \r\n        clearError, \r\n        getAllCharacters, \r\n        getCharacter, \r\n        getAllComics, \r\n        getComics, \r\n        getCharacterByName\r\n    }\r\n}\r\n\r\nexport default useMarvelService;"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","ComicsList","comicsList","setComicsList","useState","newItemLoading","setnewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","loading","error","getAllComics","useMarvelService","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","items","arr","map","item","i","className","children","_jsxs","Link","to","concat","id","thumbnail","name","price","renderItems","errorMessage","spinner","Spinner","disabled","onClick","AppBanner","avengers","avengersLogo","ComicsPage","_Fragment","Helmet","content","request","clearError","status","setStatus","useHttp","setLoading","setError","useCallback","async","url","method","arguments","undefined","body","headers","response","fetch","ok","Error","data","json","e","message","_apiBase","_apiKey","_transformComics","comic","_comic$textObjects$","homepage","urls","title","prices","path","extension","description","pageCount","language","textObjects","_transformCharacter","char","slice","wiki","comics","getAllCharacters","results","getCharacter","res","getComics","getCharacterByName"],"sourceRoot":""}